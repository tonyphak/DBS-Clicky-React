{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Header/header.js","components/NavBar/NavBar.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","onClick","addCounter","alt","name","src","image","Wrapper","children","Header","NavBar","href","score","topScore","App","state","friends","clickedFriends","highScore","_this","setState","console","log","imageClick","event","currentFriend","target","indexOf","sort","Math","random","alert","b","concat","_this2","this","components_Wrapper","NavBar_NavBar","header","map","friend","components_FriendCard","id","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"+1DAeeA,MAZf,SAAoBC,GAClB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBC,QAASL,EAAMM,YAC7CL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAAA,OAAKI,IAAKP,EAAMQ,KAAMC,IAAKT,EAAMU,SAEnCT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBCFNO,MAJf,SAAiBX,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMY,iBCS1BC,MAVf,SAAgBb,GAChB,OACEC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,gBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAd,8FCQaU,MAZf,SAAgBd,GACZ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAASH,EAAAC,EAAAC,cAAA,KAAGY,KAAK,KAAR,gBACvBd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,4BACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,UAA8BJ,EAAMgB,MAApC,mBAA2DhB,EAAMiB,aC+E9DC,6MA/EbC,MAAQ,CACNC,UACAJ,MAAO,EACPK,eAAgB,GAChBJ,SAAU,KAIZK,UAAY,WACNC,EAAKJ,MAAMH,MAAQO,EAAKJ,MAAMF,WAChCM,EAAKC,SAAS,CAAEP,SAAUM,EAAKJ,MAAMH,QACrCS,QAAQC,IAAIH,EAAKJ,MAAMF,cAK3BU,WAAa,SAACC,GACZ,IAAMC,EAAgBD,EAAME,OAAOvB,IACnCkB,QAAQC,IAAIG,GACUN,EAAKJ,MAAME,eAAeU,QAAQF,IAAkB,GAIxEN,EAAKC,SAAS,CACZJ,QAASG,EAAKJ,MAAMC,QAAQY,KAAK,iBAAM,GAAMC,KAAKC,WAClDb,eAAgB,GAChBL,MAAO,IAEPmB,MAAM,YACNZ,EAAKD,aAIPC,EAAKC,SACH,CACEJ,QAASG,EAAKJ,MAAMC,QAAQY,KAAK,SAAS9B,EAAGkC,GAC3C,MAAO,GAAMH,KAAKC,WAEpBb,eAAgBE,EAAKJ,MAAME,eAAegB,OAAOR,GACjDb,MAAOO,EAAKJ,MAAMH,MAAQ,GAG5B,WAC2B,KAArBO,EAAKJ,MAAMH,QACbmB,MAAM,iBACNZ,EAAKD,YACLC,EAAKC,SAAS,CACZJ,QAASG,EAAKJ,MAAMC,QAAQY,KAAK,iBAAM,GAAMC,KAAKC,WAClDb,eAAgB,GAChBL,MAAO,gFASV,IAAAsB,EAAAC,KACP,OACEtC,EAAAC,EAAAC,cAACqC,EAAD,KACEvC,EAAAC,EAAAC,cAACsC,EAAD,CACAzB,MAAQuB,KAAKpB,MAAMH,MACnBC,SAAUsB,KAAKpB,MAAMF,WACrBhB,EAAAC,EAAAC,cAACuC,EAAD,MACCH,KAAKpB,MAAMC,QAAQuB,IAAI,SAAAC,GAAM,OAC5B3C,EAAAC,EAAAC,cAAC0C,EAAD,CACEvC,WAAYgC,EAAKX,WACjBmB,GAAIF,EAAOE,GACXC,IAAKH,EAAOE,GACZpC,MAAOkC,EAAOlC,MACdF,KAAMoC,EAAOpC,iBAzEPwC,mBCFlBC,IAASC,OAAOjD,EAAAC,EAAAC,cAACgD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.92ffc2ad.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card container\" onClick={props.addCounter}>\n      <div className=\"img-container container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n      <div className=\"content\">\n      </div>\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Header(props) {\nreturn (\n  <header className=\"header\">\n  <h1 className=\"title\">Clicky Game!</h1>\n  <h2 className=\"subTitle\">Click on an image to earn points, but don't click on anyone more than once!</h2>\n  </header>\n);\n\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction NavBar(props) {\n    return(\n        <nav className=\"navbar navbar-dark fixed-top\">\n        <ul className=\"col-12\">\n            <li className=\"clicky\"><a href=\"/\">Clicky Game</a></li>\n            <li className=\"click\">Click an image to begin!</li>\n            <li className=\"score\">Score: {props.score}  |  Top Score: {props.topScore}</li>\n        </ul>\n        </nav>\n    );\n}\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header/header.js\";\nimport friends from \"./friends.json\";\nimport NavBar from \"./components/NavBar/NavBar.js\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    score: 0,\n    clickedFriends: [],\n    topScore: 0\n  };\n\n  //function to track top score when player wins or loses\n  highScore = () =>{\n    if (this.state.score > this.state.topScore) {\n      this.setState({ topScore: this.state.score});\n      console.log(this.state.topScore)\n    };\n  };\n  \n  //when you click on a card ... the friend is taken out of the array\n  imageClick = (event) => {\n    const currentFriend = event.target.alt;\n    console.log(currentFriend);\n    const friendClicked = this.state.clickedFriends.indexOf(currentFriend) > -1;\n\n    //if you click on a friend that has already been selected, the game is reset and cards reordered\n    if (friendClicked) {\n      this.setState({\n        friends: this.state.friends.sort(() => 0.5 - Math.random()),\n        clickedFriends: [],\n        score: 0\n      });\n        alert(\"You lose\");\n        this.highScore();\n\n    //if you click on an available friend, your score is increased and cards reordered\n    } else {\n      this.setState(\n        {\n          friends: this.state.friends.sort(function(a, b) {\n            return 0.5 - Math.random();\n          }),\n          clickedFriends: this.state.clickedFriends.concat(currentFriend),\n          score: this.state.score + 1\n        },\n    //if you get all 12 friend corrent you get a congrats message and the game resets        \n        () => {\n          if (this.state.score === 12) {\n            alert(\"Yay! You Win!\");\n            this.highScore();\n            this.setState({\n              friends: this.state.friends.sort(() => 0.5 - Math.random()),\n              clickedFriends: [],\n              score: 0\n            });\n          }\n        }\n      );\n    }\n  };\n\n// Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <NavBar\n        score ={this.state.score}\n        topScore={this.state.topScore}/>\n        <Header/>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            addCounter={this.imageClick}\n            id={friend.id}\n            key={friend.id}\n            image={friend.image}\n            name={friend.name}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}